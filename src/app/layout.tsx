import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import '@/styles/globals.css';

import Navbar from '@/app/_components/navbar';
import StoreProvider from '@/app/_providers/StoreProvider';
import { initBookList } from '@/lib/data/books';
import BookModal from '@/components/bookModal';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Blazesoft BookStore',
  description: 'Generated by create next app',
};

// force dynamic ensures when the root layout/home page refreshes,
// the DB data fetching will fire again
// gurantee the data is always fresh in home page
export const dynamic = 'force-dynamic';

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // let's say I fetch the book list in root layout
  // the server side rendered book list is passed to redux's store provider
  // since the data is from local, every refreshes will generate a new random book list
  // in real live use case, data is persisted for every mutation
  // the book list will be update based on mutation
  const books = initBookList();

  return (
    <html lang='en'>
      <body className={inter.className}>
        {/* pass to redux provider */}
        <StoreProvider books={books}>
          <Navbar />
          {children}
          <BookModal />
        </StoreProvider>
      </body>
    </html>
  );
}
